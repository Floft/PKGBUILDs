--- dlgautodj.cpp.orig	2011-02-15 19:00:21.000000000 -0800
+++ dlgautodj.cpp	2011-03-06 10:30:21.470089115 -0800
@@ -66,6 +66,10 @@
                             ControlObject::getControl(ConfigKey("[Channel2]", "repeat")));
     m_pCOCrossfader = new ControlObjectThreadMain(
                             ControlObject::getControl(ConfigKey("[Master]", "crossfader")));
+    m_pCOVolume1 = new ControlObjectThreadMain(
+                            ControlObject::getControl(ConfigKey("[Channel1]", "volume")));
+    m_pCOVolume2 = new ControlObjectThreadMain(
+                            ControlObject::getControl(ConfigKey("[Channel2]", "volume")));
 }
 
 DlgAutoDJ::~DlgAutoDJ()
@@ -223,6 +227,8 @@
         //Crossfade!
         float crossfadeValue = -1.0f + 2*(value-posThreshold)/(1.0f-posThreshold);
         m_pCOCrossfader->slotSet(crossfadeValue); //Move crossfader to the right!
+        m_pCOVolume1->slotSet(1.0f-(value-posThreshold)/(1.0f-posThreshold));
+        m_pCOVolume2->slotSet((value-posThreshold)/(1.0f-posThreshold));
         //If the second player doesn't have a new track loaded in it...
         if (!m_bPlayer2Primed)
         {
@@ -267,6 +273,8 @@
         //Crossfade!
         float crossfadeValue = 1.0f - 2*(value-posThreshold)/(1.0f-posThreshold);
         m_pCOCrossfader->slotSet(crossfadeValue); //Move crossfader to the right!
+        m_pCOVolume2->slotSet(1.0f-(value-posThreshold)/(1.0f-posThreshold));
+        m_pCOVolume1->slotSet((value-posThreshold)/(1.0f-posThreshold));
 
         //If the first player doesn't have the next track loaded, load a track into
         //it and start playing it!
--- dlgautodj.h.orig	2011-02-15 19:00:21.000000000 -0800
+++ dlgautodj.h	2011-03-06 10:28:54.092612568 -0800
@@ -56,6 +56,8 @@
     ControlObjectThreadMain* m_pCORepeat1;
     ControlObjectThreadMain* m_pCORepeat2;
     ControlObjectThreadMain* m_pCOCrossfader;
+    ControlObjectThreadMain* m_pCOVolume1;
+    ControlObjectThreadMain* m_pCOVolume2;
 };
 
 #endif //DLGTRIAGE_H
